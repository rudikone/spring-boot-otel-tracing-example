version: '3'

services:
  kafka:
    image: apache/kafka-native:latest
    ports:
      - "9092:9092"
    environment:
      # уникальный идентификатор для узла Kafka в кластере. В режиме KRaft (Kafka без ZooKeeper) KAFKA_NODE_ID используется вместо KAFKA_BROKER_ID
      KAFKA_NODE_ID: 1
      #  определены три слушателя:
        # PLAINTEXT: использует протокол PLAINTEXT
        # CONTROLLER: использует протокол PLAINTEXT
        # EXTERNAL: использует протокол PLAINTEXT
      # Протокол PLAINTEXT означает, что соединение не шифруется и не требует аутентификации
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT
      # Определены три слушателя:
        # PLAINTEXT://0.0.0.0:29092: Слушатель для внутренних соединений в Docker сети.
        # CONTROLLER://0.0.0.0:9093: Слушатель для внутреннего контроллера Kafka (используется в KRaft режиме).
        # EXTERNAL://0.0.0.0:9092: Слушатель для внешних соединений, доступный извне Docker.
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:29092,CONTROLLER://0.0.0.0:9093,EXTERNAL://0.0.0.0:9092
      # Это список слушателей, которые Kafka сообщает клиентам для установления соединения
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,EXTERNAL://localhost:9092
      # Этот параметр указывает Kafka, какой из настроенных слушателей использовать для коммуникации между брокерами в кластере
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      # Слушатель для внутреннего контроллера Kafka (используется в KRaft режиме).
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      # список узлов, участвующих в кворуме контроллеров Kafka в режиме KRaft.
        # Узел с ID 1
        # Хост с именем kafka
        # Порт 9093 для коммуникации контроллера
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
      # роли, которые будет выполнять данный экземпляр Kafka
        # broker: узел будет выступать в роли брокера, обрабатывая запросы на запись и чтение данных.
        # controller: узел может выступать в роли контроллера кластера
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    volumes:
      - kafka_data:/var/lib/kafka/data
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics.sh --bootstrap-server localhost:9092 --list"]
      interval: 30s
      timeout: 10s
      retries: 3

  mockserver:
    image: mockserver/mockserver:latest
    ports:
      - "1080:1080"
    environment:
      MOCKSERVER_INITIALIZATION_JSON_PATH: /config/mockserver.json
    volumes:
      - ./docker:/config

  db:
    image: postgres:15.2
    environment:
      POSTGRES_DB: otel
      POSTGRES_USER: rudikone
      POSTGRES_PASSWORD: mypassword
    volumes:
      - ./docker/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"

  jaeger:
    image: jaegertracing/all-in-one:latest
    ports:
      - "16686:16686"
      - "4317:4317"
      - "4318:4318"

volumes:
  kafka_data: