spring:
  main:
    banner-mode: off
  application:
    name: spring-boot-otel-tracing-example
  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      group-id: my-group
      value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      properties:
        spring.deserializer.value.delegate.class: org.springframework.kafka.support.serializer.JsonDeserializer
        spring.json.value.default.type: ru.rudikov.springboototeltracingexample.adapter.model.MyRequest
        spring.json.trusted.packages: ru.rudikov.springboototeltracingexample
    producer:
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    template:
      default-topic: response-topic
  datasource:
    url: jdbc:postgresql://localhost:5432/otel
    username: rudikone
    password: mypassword
    driver-class-name: org.postgresql.Driver
  sleuth:
    otel:
      exporter:
        otlp:
          # url коллектора трейсов
          # в связке sleuth-otel экспортер использует grpc по умолчанию. в jaeger - 4317 порт для grpc коллектора
          endpoint: http://localhost:4317/v1/traces
          enabled: true
    sampler:
      probability: 1.0
    propagation:
      # работает только то, что стоит на 1 месте
      type: w3c, b3



