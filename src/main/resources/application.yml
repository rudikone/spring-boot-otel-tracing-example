spring:
  main:
    banner-mode: off
  application:
    name: spring-boot-otel-tracing-example
  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      group-id: my-group
      value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      properties:
        spring.deserializer.value.delegate.class: org.springframework.kafka.support.serializer.JsonDeserializer
        spring.json.value.default.type: ru.rudikov.springboototeltracingexample.adapter.model.MyRequest
        spring.json.trusted.packages: ru.rudikov.springboototeltracingexample
    producer:
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    template:
      default-topic: response-topic
  datasource:
    # https://p6spy.readthedocs.io/en/latest/integration.html#connection-url-way
    url: jdbc:p6spy:postgresql://localhost:5432/otel
    username: rudikone
    password: mypassword
    # https://p6spy.readthedocs.io/en/latest/install.html?highlight=p6spydriver#p6spy-installation
    driver-class-name: com.p6spy.engine.spy.P6SpyDriver
  sleuth:
    otel:
      exporter:
        otlp:
          # url коллектора трейсов
          # в связке sleuth-otel экспортер использует grpc по умолчанию. в jaeger - 4317 порт для grpc коллектора
          endpoint: http://localhost:4317/v1/traces
          enabled: true
    sampler:
      probability: 1.0
    propagation:
      # на consume работает только то, что стоит на 1 месте, в доке не нашел объяснения
      type: [w3c, b3]
    jdbc:
      p6spy:
        enabled: true
      includes: [connection, query] # имеет смысл сконфигурировать убрать опцию fetch, которая отвечает за трассирование чтения из ResultSet. Это малоинформативный спан: после прогрева обычно это микросекунды.
    # Это свойство включает генерацию 128-битных идентификаторов трассировки (trace ID) вместо стандартных 64-битных https://www.w3.org/TR/trace-context/#trace-id
    # ВНИМАНИЕ: 128-bit trace-id необходимо включить на стороне клиента, иначе трейс будет 000000000ххххх https://github.com/openzipkin/brave/blob/master/brave/README.md#128-bit-trace-ids
    trace-id128: true
    # Это свойство контролирует поведение объединения (joining) идентификаторов трассировки и диапазонов (spans) между клиентом и сервером.
    # Когда установлено значение false, Sleuth будет генерировать новый идентификатор диапазона (span ID) для каждого исходящего запроса, даже если входящий запрос уже имеет идентификатор трассировки.
    supports-join: false
